{"version":3,"sources":["components/Grid.js","components/Board.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Grid","props","piece","board","id","react_default","a","createElement","className","onClick","index_es","icon","faCircle","faXmark","Board","createGrid","components_Grid","turn","Game","_useState","useState","_useState2","Object","slicedToArray","setTurn","_useState3","_useState4","setBoard","_useState5","_useState6","count","setCount","end","playAgain","components_Board","tmpBoard","toConsumableArray","console","log","length","Fragment","App","components_Game","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.56d28559.chunk.js","sourcesContent":["import React from 'react'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faCircle} from '@fortawesome/free-regular-svg-icons'\nimport {faXmark} from '@fortawesome/free-solid-svg-icons'\n\n\nconst Grid = (props) => {\n\n    var piece = props.board[props.id];\n    // var end = props.end;\n\n    return (\n        <button className='grid' onClick={props.onClick}>\n            <div className='piece'>\n                {\n                    piece === 'O' ? <FontAwesomeIcon icon={faCircle} /> : \n                    piece === 'X' ? <FontAwesomeIcon icon={faXmark} /> : \n                    ''\n                }\n            </div>\n        </button>\n    )\n}\n\nexport default Grid","import React from 'react'\nimport Grid from './Grid'\n\nconst Board = (props) => {\n\n    const createGrid = (id) => {\n        return <Grid id={id} onClick={() => props.onClick(id)} turn={props.turn} board={props.board}/>\n    }\n\n    return (\n    <div className='Board'>\n        <div className='turn'>Turn: {props.turn}</div>\n        <br></br>\n        <div className='grids'>\n            <div className='row'>\n                {createGrid(0)}\n                {createGrid(1)}\n                {createGrid(2)}\n            </div>\n            <div className='row'>\n                {createGrid(3)}\n                {createGrid(4)}\n                {createGrid(5)}\n            </div>\n            <div className='row'>\n                {createGrid(6)}\n                {createGrid(7)}\n                {createGrid(8)}\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Board","import React, { useState } from 'react'\nimport Board from './Board'\n\nconst Game = () => {\n\n    const [turn, setTurn] = useState('O');\n    const [board, setBoard] = useState([\n        '', '', '', \n        '', '', '', \n        '', '', ''\n    ]);\n    const [count, setCount] = useState(0);\n\n    var end = false;\n\n    const play = (id) => {\n        setCount(count + 1);\n        if (board[id] !== '' || end) return;\n        // console.log(turn, id);\n        var tmpBoard = [...board];\n        tmpBoard[id] = turn;\n        setBoard(tmpBoard);\n        // console.log(board);\n        if (turn === 'O') setTurn('X');\n        else setTurn('O');\n\n        console.log(count);\n    }\n\n    const playAgain = () => {\n        end = false;\n        setTurn('O');\n        setCount(0);\n        setBoard([\n            '', '', '', \n            '', '', '', \n            '', '', ''\n        ]);\n    }\n\n    const win = () => {\n        if (\n            (board[0] === board[1] && board[0] === board[2] && board[0].length === 1) || \n            (board[3] === board[4] && board[3] === board[5] && board[3].length === 1) || \n            (board[6] === board[7] && board[6] === board[8] && board[6].length === 1) || \n            (board[0] === board[3] && board[0] === board[6] && board[0].length === 1) || \n            (board[1] === board[4] && board[1] === board[7] && board[1].length === 1) || \n            (board[2] === board[5] && board[2] === board[8] && board[2].length === 1) || \n            (board[0] === board[4] && board[0] === board[8] && board[0].length === 1) || \n            (board[2] === board[4] && board[2] === board[6] && board[2].length === 1)\n        ) {\n            end = true;\n            if (turn === 'O') {\n                return (\n                    <>\n                    <div>Winner: X</div>\n                    <br></br>\n                    <button onClick={playAgain}>Play again</button>\n                    </>\n                )\n            }\n            else if (turn === 'X') {\n                return (\n                    <>\n                    <div>Winner: O</div>\n                    <br></br>\n                    <button onClick={playAgain}>Play again</button>\n                    </>\n                )\n            }\n        }\n        else if (count >= 9) {\n            // console.log(\"HI\");\n            end = true;\n            return (\n                <>\n                <div>It's a tie!</div>\n                <br></br>\n                <button onClick={playAgain}>Play again</button>\n                </>\n            )\n        }\n        else return '';\n    }\n\n    return (\n        <div className='Game'>\n            <div className='title'>Tic Tac Toe</div>\n            <br></br>\n            <Board onClick={play} turn={turn} board={board}/>\n            <div className='win'>\n                <br></br>\n                {win()}\n            </div>\n        </div>\n    )\n}\n\nexport default Game","import React, { useState } from 'react'\nimport Game from \"./components/Game\";\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n            <Game />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}